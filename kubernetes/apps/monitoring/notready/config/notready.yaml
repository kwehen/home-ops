---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: node-management
rules:
- apiGroups: [""]
  resources: ["nodes"]
  verbs: ["get", "list", "watch", "patch", "update"]
- apiGroups: ["coordination.k8s.io"]
  resources: ["leases"]
  verbs: ["get", "create", "update", "delete"]
- apiGroups: ["policy"]
  resources: ["pods/eviction"]
  verbs: ["create"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: node-management-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: node-management
subjects:
- kind: ServiceAccount
  name: node-management
  namespace: monitoring
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: node-management
  namespace: monitoring
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: drain-bad-nodes
  namespace: monitoring
spec:
  schedule: "*/2 * * * *"
  successfulJobsHistoryLimit: 1
  failedJobsHistoryLimit: 1
  jobTemplate:
    spec:
      template:
        spec:
          serviceAccountName: node-management
          containers:
          - name: update
            image: bitnami/kubectl:latest
            command:
            - /bin/sh
            - -c
            - |
              KUBECTL="/opt/bitnami/kubectl/bin/kubectl"

              # Get only nodes which are not drained yet
              NOT_READY_NODES=$($KUBECTL get nodes | grep -P 'NotReady(?:,SchedulingDisabled)?' | awk '{print $1}' | xargs echo)
              # Get only nodes which are still drained
              READY_NODES=$($KUBECTL get nodes | grep '\sReady,SchedulingDisabled' | awk '{print $1}' | xargs echo)

              echo "Unready nodes that are undrained: $NOT_READY_NODES"
              echo "Ready nodes: $READY_NODES"

              for node in $NOT_READY_NODES; do
                echo "Node $node not drained yet, draining..."
                $KUBECTL drain --ignore-daemonsets --force $node
                echo "Done"
              done;

              for node in $READY_NODES; do
                echo "Node $node still drained, uncordoning..."
                $KUBECTL uncordon $node
                echo "Done"
              done;
          restartPolicy: OnFailure